//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CSLSite.SNA {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IComunicacion", Namespace="http://tempuri.org/")]
    public partial class CRMService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InvocarOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvocarSWOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvocarSwCasCFSOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CRMService() {
            this.Url = global::CSLSite.Properties.Settings.Default.CSLSite_SNA_CRMService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InvocarCompletedEventHandler InvocarCompleted;
        
        /// <remarks/>
        public event InvocarSWCompletedEventHandler InvocarSWCompleted;
        
        /// <remarks/>
        public event InvocarSwCasCFSCompletedEventHandler InvocarSwCasCFSCompleted;
        
        /// <remarks/>
        public event TestConnCompletedEventHandler TestConnCompleted;
        
        /// <remarks/>
        public event TestSerCompletedEventHandler TestSerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IComunicacion/Invocar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Invocar([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usuario, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clave, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlPayload) {
            object[] results = this.Invoke("Invocar", new object[] {
                        usuario,
                        clave,
                        xmlPayload});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InvocarAsync(string usuario, string clave, string xmlPayload) {
            this.InvocarAsync(usuario, clave, xmlPayload, null);
        }
        
        /// <remarks/>
        public void InvocarAsync(string usuario, string clave, string xmlPayload, object userState) {
            if ((this.InvocarOperationCompleted == null)) {
                this.InvocarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvocarOperationCompleted);
            }
            this.InvokeAsync("Invocar", new object[] {
                        usuario,
                        clave,
                        xmlPayload}, this.InvocarOperationCompleted, userState);
        }
        
        private void OnInvocarOperationCompleted(object arg) {
            if ((this.InvocarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvocarCompleted(this, new InvocarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IComunicacion/InvocarSW", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InvocarSW([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlPayload) {
            object[] results = this.Invoke("InvocarSW", new object[] {
                        xmlPayload});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InvocarSWAsync(string xmlPayload) {
            this.InvocarSWAsync(xmlPayload, null);
        }
        
        /// <remarks/>
        public void InvocarSWAsync(string xmlPayload, object userState) {
            if ((this.InvocarSWOperationCompleted == null)) {
                this.InvocarSWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvocarSWOperationCompleted);
            }
            this.InvokeAsync("InvocarSW", new object[] {
                        xmlPayload}, this.InvocarSWOperationCompleted, userState);
        }
        
        private void OnInvocarSWOperationCompleted(object arg) {
            if ((this.InvocarSWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvocarSWCompleted(this, new InvocarSWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IComunicacion/InvocarSwCasCFS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InvocarSwCasCFS([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlCasCFS) {
            object[] results = this.Invoke("InvocarSwCasCFS", new object[] {
                        xmlCasCFS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InvocarSwCasCFSAsync(string xmlCasCFS) {
            this.InvocarSwCasCFSAsync(xmlCasCFS, null);
        }
        
        /// <remarks/>
        public void InvocarSwCasCFSAsync(string xmlCasCFS, object userState) {
            if ((this.InvocarSwCasCFSOperationCompleted == null)) {
                this.InvocarSwCasCFSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvocarSwCasCFSOperationCompleted);
            }
            this.InvokeAsync("InvocarSwCasCFS", new object[] {
                        xmlCasCFS}, this.InvocarSwCasCFSOperationCompleted, userState);
        }
        
        private void OnInvocarSwCasCFSOperationCompleted(object arg) {
            if ((this.InvocarSwCasCFSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvocarSwCasCFSCompleted(this, new InvocarSwCasCFSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IComunicacion/TestConn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestConn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string con) {
            object[] results = this.Invoke("TestConn", new object[] {
                        con});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnAsync(string con) {
            this.TestConnAsync(con, null);
        }
        
        /// <remarks/>
        public void TestConnAsync(string con, object userState) {
            if ((this.TestConnOperationCompleted == null)) {
                this.TestConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnOperationCompleted);
            }
            this.InvokeAsync("TestConn", new object[] {
                        con}, this.TestConnOperationCompleted, userState);
        }
        
        private void OnTestConnOperationCompleted(object arg) {
            if ((this.TestConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnCompleted(this, new TestConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IComunicacion/TestSer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestSer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ser) {
            object[] results = this.Invoke("TestSer", new object[] {
                        ser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestSerAsync(string ser) {
            this.TestSerAsync(ser, null);
        }
        
        /// <remarks/>
        public void TestSerAsync(string ser, object userState) {
            if ((this.TestSerOperationCompleted == null)) {
                this.TestSerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSerOperationCompleted);
            }
            this.InvokeAsync("TestSer", new object[] {
                        ser}, this.TestSerOperationCompleted, userState);
        }
        
        private void OnTestSerOperationCompleted(object arg) {
            if ((this.TestSerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSerCompleted(this, new TestSerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InvocarCompletedEventHandler(object sender, InvocarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvocarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvocarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InvocarSWCompletedEventHandler(object sender, InvocarSWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvocarSWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvocarSWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InvocarSwCasCFSCompletedEventHandler(object sender, InvocarSwCasCFSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvocarSwCasCFSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvocarSwCasCFSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void TestConnCompletedEventHandler(object sender, TestConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void TestSerCompletedEventHandler(object sender, TestSerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591